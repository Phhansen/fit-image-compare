/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface PtxImageComparison {
      /**
       * Sets the color of the draggable handle 
       */
      'dividerColor': string;
      /**
       * Path to modified image src
       */
      'modified': string;
      /**
       * Path to original image src
       */
      'original': string;
    }
  }

  interface HTMLPtxImageComparisonElement extends StencilComponents.PtxImageComparison, HTMLStencilElement {}

  var HTMLPtxImageComparisonElement: {
    prototype: HTMLPtxImageComparisonElement;
    new (): HTMLPtxImageComparisonElement;
  };
  interface HTMLElementTagNameMap {
    'ptx-image-comparison': HTMLPtxImageComparisonElement;
  }
  interface ElementTagNameMap {
    'ptx-image-comparison': HTMLPtxImageComparisonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ptx-image-comparison': JSXElements.PtxImageComparisonAttributes;
    }
  }
  namespace JSXElements {
    export interface PtxImageComparisonAttributes extends HTMLAttributes {
      /**
       * Sets the color of the draggable handle 
       */
      'dividerColor'?: string;
      /**
       * Path to modified image src
       */
      'modified'?: string;
      /**
       * Path to original image src
       */
      'original'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
